function valueIterationGaussSeidel(ùñ≤::Int, ùñ†::Int, dataset::DataFrame,
    Œ≥::Float64, terminalStates, reachableStates, œµ=1, reachableStateSpace=1:ùñ≤)

    T, R = inferTransitionAndReward(dataset, ùñ≤, ùñ†)

    Œ¥ = œµ*(1-Œ≥)/Œ≥
    bellmanResidual = Œ¥+1
    @show Œ¥

    U  = zeros(ùñ≤)
    Up = zeros(ùñ≤)
    œÄ  = zeros(ùñ≤)

    sumOfDiscountedFutureRewards = zeros(ùñ†)
    immediateReward              = zeros(ùñ≤, ùñ†)

    for s in 1:ùñ≤, a in 1:ùñ†
        immediateReward[s, a] = get(R, (s, a), 0)
    end

    k = 1

    while bellmanResidual > Œ¥

        for s in reachableStateSpace

            sumOfDiscountedFutureRewards = zeros(ùñ†)

            for a in 1:ùñ†

                if s ‚àâ terminalStates
                    sumOfDiscountedFutureRewards[a] = Œ≥*sum(get(T, (s, a, sp), 0)*Up[sp] for sp in reachableStates(s))
                end

            end

            Up[s], œÄ[s] = findmax(immediateReward[s, :] + sumOfDiscountedFutureRewards)

        end

        bellmanResidual = maximum(abs.(Up - U))

        @show k
        @show bellmanResidual

        k += 1
        U = deepcopy(Up)

    end

    return Up, collect(œÄ)

end
